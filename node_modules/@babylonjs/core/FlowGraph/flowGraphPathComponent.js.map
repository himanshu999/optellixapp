{"version":3,"file":"flowGraphPathComponent.js","sourceRoot":"","sources":["../../../../dev/core/src/FlowGraph/flowGraphPathComponent.ts"],"names":[],"mappings":"AAIA,OAAO,EAAE,cAAc,EAAE,MAAM,sBAAsB,CAAC;AAEtD;;;GAGG;AACH,MAAM,OAAO,sBAAsB;IAc/B,YAAY,IAAmB,EAAE,UAA0B;QAT3D;;WAEG;QACH,yBAAoB,GAAsC,EAAE,CAAC;QAOzD,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;QAC7B,KAAK,MAAM,cAAc,IAAI,IAAI,CAAC,kBAAkB,EAAE,EAAE;YACpD,IAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,iBAAiB,CAAC,cAAc,EAAE,cAAc,CAAC,CAAC,CAAC;SACrG;IACL,CAAC;IAED;;;;;OAKG;IACH,cAAc,CAAC,OAAyB;QACpC,KAAK,MAAM,mBAAmB,IAAI,IAAI,CAAC,oBAAoB,EAAE;YACzD,MAAM,mBAAmB,GAAG,mBAAmB,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC;YAClE,MAAM,cAAc,GAAG,mBAAmB,CAAC,IAAI,CAAC;YAChD,IAAI,CAAC,IAAI,CAAC,uBAAuB,CAAC,cAAc,EAAE,mBAAmB,CAAC,CAAC;SAC1E;QACD,OAAO,IAAI,CAAC,IAAI,CAAC;IACrB,CAAC;IAED;;;;OAIG;IACH,WAAW,CAAC,OAAyB;QACjC,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,CAAC;QAC7B,OAAO,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC;IAC1C,CAAC;IAED;;;;OAIG;IACH,WAAW,CAAC,OAAyB,EAAE,KAAU;QAC7C,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,CAAC;QAC7B,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC;IAC1C,CAAC;CACJ","sourcesContent":["import type { FlowGraphBlock } from \"./flowGraphBlock\";\r\nimport type { FlowGraphContext } from \"./flowGraphContext\";\r\nimport type { FlowGraphDataConnection } from \"./flowGraphDataConnection\";\r\nimport type { FlowGraphPath } from \"./flowGraphPath\";\r\nimport { RichTypeNumber } from \"./flowGraphRichTypes\";\r\n\r\n/**\r\n * This class represents a component that has a path and a series of numeric\r\n * data inputs which fill in the template strings in the path.\r\n */\r\nexport class FlowGraphPathComponent {\r\n    /**\r\n     * The path that this component is associated with.\r\n     */\r\n    path: FlowGraphPath;\r\n    /**\r\n     * The list of numeric data inputs that fill in the template strings in the path.\r\n     */\r\n    templateStringInputs: FlowGraphDataConnection<number>[] = [];\r\n    /**\r\n     * The block that owns this component.\r\n     */\r\n    ownerBlock: FlowGraphBlock;\r\n\r\n    constructor(path: FlowGraphPath, ownerBlock: FlowGraphBlock) {\r\n        this.path = path;\r\n        this.ownerBlock = ownerBlock;\r\n        for (const templateString of path.getTemplateStrings()) {\r\n            this.templateStringInputs.push(this.ownerBlock.registerDataInput(templateString, RichTypeNumber));\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Get the inputs of all of the numeric data inputs and use them to fill in the\r\n     * template strings in the path.\r\n     * @param context the context to use to get the values of the numeric data inputs\r\n     * @returns the path with the template strings filled in\r\n     */\r\n    substitutePath(context: FlowGraphContext): FlowGraphPath {\r\n        for (const templateStringInput of this.templateStringInputs) {\r\n            const templateStringValue = templateStringInput.getValue(context);\r\n            const templateString = templateStringInput.name;\r\n            this.path.setTemplateSubstitution(templateString, templateStringValue);\r\n        }\r\n        return this.path;\r\n    }\r\n\r\n    /**\r\n     * Substitutes the template strings in the path and gets the property on the target object.\r\n     * @param context\r\n     * @returns\r\n     */\r\n    getProperty(context: FlowGraphContext): any {\r\n        this.substitutePath(context);\r\n        return this.path.getProperty(context);\r\n    }\r\n\r\n    /**\r\n     * Substitutes the template strings in the path and sets the property on the target object.\r\n     * @param context\r\n     * @param value\r\n     */\r\n    setProperty(context: FlowGraphContext, value: any) {\r\n        this.substitutePath(context);\r\n        this.path.setProperty(context, value);\r\n    }\r\n}\r\n"]}