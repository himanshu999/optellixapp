{"version":3,"file":"flowGraphMathBlocks.js","sourceRoot":"","sources":["../../../../../../../dev/core/src/FlowGraph/Blocks/Data/Math/flowGraphMathBlocks.ts"],"names":[],"mappings":"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","sourcesContent":["import { RegisterClass } from \"../../../../Misc/typeStore\";\r\nimport type { IFlowGraphBlockConfiguration } from \"../../../flowGraphBlock\";\r\nimport { RichTypeAny, RichTypeBoolean, RichTypeNumber, RichTypeVector2, RichTypeVector3 } from \"../../../flowGraphRichTypes\";\r\nimport { FlowGraphBinaryOperationBlock } from \"../flowGraphBinaryOperationBlock\";\r\nimport { FlowGraphConstantOperationBlock } from \"../flowGraphConstantOperationBlock\";\r\nimport { Matrix, Vector2, Vector3, Vector4 } from \"../../../../Maths/math.vector\";\r\nimport { FlowGraphUnaryOperationBlock } from \"../flowGraphUnaryOperationBlock\";\r\nimport { FlowGraphTernaryOperationBlock } from \"../flowGraphTernaryOperationBlock\";\r\n\r\n/**\r\n * @internal\r\n * @param v\r\n * @returns\r\n */\r\nfunction _getClassNameOf(v: any) {\r\n    if (v.getClassName) {\r\n        return v.getClassName();\r\n    }\r\n    return \"\";\r\n}\r\n\r\n/**\r\n * @internal\r\n * @param className\r\n * @param className2\r\n * @returns\r\n */\r\nfunction _areSameVectorClass(className: string, className2: string) {\r\n    return (className === \"Vector2\" && className2 === \"Vector2\") || (className === \"Vector3\" && className2 === \"Vector3\") || (className === \"Vector4\" && className2 === \"Vector4\");\r\n}\r\n\r\n/**\r\n * @experimental\r\n * Polymorphic add block.\r\n */\r\nexport class FlowGraphAddBlock extends FlowGraphBinaryOperationBlock<any, any, any> {\r\n    constructor(config?: IFlowGraphBlockConfiguration) {\r\n        super(RichTypeAny, RichTypeAny, RichTypeAny, (a, b) => this._polymorphicAdd(a, b), FlowGraphAddBlock.ClassName, config);\r\n    }\r\n\r\n    private _polymorphicAdd(a: any, b: any) {\r\n        const aClassName = _getClassNameOf(a);\r\n        const bClassName = _getClassNameOf(b);\r\n        if (_areSameVectorClass(aClassName, bClassName)) {\r\n            return a.add(b);\r\n        } else {\r\n            return a + b;\r\n        }\r\n    }\r\n\r\n    public getClassName(): string {\r\n        return FlowGraphAddBlock.ClassName;\r\n    }\r\n\r\n    public static ClassName = \"FGAddBlock\";\r\n}\r\nRegisterClass(FlowGraphAddBlock.ClassName, FlowGraphAddBlock);\r\n\r\n/**\r\n * @experimental\r\n * Polymorphic add block.\r\n */\r\nexport class FlowGraphSubtractBlock extends FlowGraphBinaryOperationBlock<any, any, any> {\r\n    constructor(config?: IFlowGraphBlockConfiguration) {\r\n        super(RichTypeAny, RichTypeAny, RichTypeAny, (a, b) => this._polymorphicAdd(a, b), FlowGraphSubtractBlock.ClassName, config);\r\n    }\r\n\r\n    private _polymorphicAdd(a: any, b: any) {\r\n        const aClassName = _getClassNameOf(a);\r\n        const bClassName = _getClassNameOf(b);\r\n        if (_areSameVectorClass(aClassName, bClassName)) {\r\n            return a.subtract(b);\r\n        } else {\r\n            return a - b;\r\n        }\r\n    }\r\n\r\n    public getClassName(): string {\r\n        return FlowGraphSubtractBlock.ClassName;\r\n    }\r\n\r\n    public static ClassName = \"FGSubBlock\";\r\n}\r\nRegisterClass(FlowGraphSubtractBlock.ClassName, FlowGraphSubtractBlock);\r\n\r\nexport class FlowGraphMultiplyBlock extends FlowGraphBinaryOperationBlock<any, any, any> {\r\n    constructor(config?: IFlowGraphBlockConfiguration) {\r\n        super(RichTypeAny, RichTypeAny, RichTypeAny, (a, b) => this._polymorphicMultiply(a, b), FlowGraphMultiplyBlock.ClassName, config);\r\n    }\r\n\r\n    private _polymorphicMultiply(a: any, b: any) {\r\n        const aClassName = _getClassNameOf(a);\r\n        const bClassName = _getClassNameOf(b);\r\n        if (_areSameVectorClass(aClassName, bClassName)) {\r\n            return a.multiply(b);\r\n        } else {\r\n            return a * b;\r\n        }\r\n    }\r\n\r\n    public static ClassName = \"FGMultiplyBlock\";\r\n}\r\nRegisterClass(FlowGraphMultiplyBlock.ClassName, FlowGraphMultiplyBlock);\r\n\r\nexport class FlowGraphDivideBlock extends FlowGraphBinaryOperationBlock<any, any, any> {\r\n    constructor(config?: IFlowGraphBlockConfiguration) {\r\n        super(RichTypeAny, RichTypeAny, RichTypeAny, (a, b) => this._polymorphicDivide(a, b), FlowGraphDivideBlock.ClassName, config);\r\n    }\r\n\r\n    private _polymorphicDivide(a: any, b: any) {\r\n        const aClassName = _getClassNameOf(a);\r\n        const bClassName = _getClassNameOf(b);\r\n        if (_areSameVectorClass(aClassName, bClassName)) {\r\n            return a.divide(b);\r\n        } else {\r\n            return a / b;\r\n        }\r\n    }\r\n\r\n    public static ClassName = \"FGDivideBlock\";\r\n}\r\nRegisterClass(FlowGraphDivideBlock.ClassName, FlowGraphDivideBlock);\r\n\r\nexport class FlowGraphRandomBlock extends FlowGraphConstantOperationBlock<number> {\r\n    constructor(config?: IFlowGraphBlockConfiguration) {\r\n        super(RichTypeNumber, () => Math.random(), FlowGraphRandomBlock.ClassName, config);\r\n    }\r\n\r\n    public static ClassName = \"FGRandomBlock\";\r\n}\r\nRegisterClass(FlowGraphRandomBlock.ClassName, FlowGraphRandomBlock);\r\n\r\nexport class FlowGraphDotBlock extends FlowGraphBinaryOperationBlock<any, any, number> {\r\n    constructor(config?: IFlowGraphBlockConfiguration) {\r\n        super(RichTypeAny, RichTypeAny, RichTypeNumber, (a, b) => this._polymorphicDot(a, b), FlowGraphDotBlock.ClassName, config);\r\n    }\r\n\r\n    private _polymorphicDot(a: any, b: any) {\r\n        const className = _getClassNameOf(a);\r\n        switch (className) {\r\n            case \"Vector2\":\r\n                return Vector2.Dot(a, b);\r\n            case \"Vector3\":\r\n                return Vector3.Dot(a, b);\r\n            case \"Vector4\":\r\n                return Vector4.Dot(a, b);\r\n            default:\r\n                throw new Error(`Cannot get dot product of ${a} and ${b}`);\r\n        }\r\n    }\r\n\r\n    public static ClassName = \"FGDotBlock\";\r\n}\r\nRegisterClass(FlowGraphDotBlock.ClassName, FlowGraphDotBlock);\r\n\r\nexport class FlowGraphEBlock extends FlowGraphConstantOperationBlock<number> {\r\n    constructor(config?: IFlowGraphBlockConfiguration) {\r\n        super(RichTypeNumber, () => Math.E, FlowGraphEBlock.ClassName, config);\r\n    }\r\n\r\n    public static ClassName = \"FGEBlock\";\r\n}\r\nRegisterClass(FlowGraphEBlock.ClassName, FlowGraphEBlock);\r\n\r\nexport class FlowGraphPiBlock extends FlowGraphConstantOperationBlock<number> {\r\n    constructor(config?: IFlowGraphBlockConfiguration) {\r\n        super(RichTypeNumber, () => Math.PI, FlowGraphPiBlock.ClassName, config);\r\n    }\r\n\r\n    public static ClassName = \"FGPIBlock\";\r\n}\r\nRegisterClass(FlowGraphPiBlock.ClassName, FlowGraphPiBlock);\r\n\r\nexport class FlowGraphInfBlock extends FlowGraphConstantOperationBlock<number> {\r\n    constructor(config?: IFlowGraphBlockConfiguration) {\r\n        super(RichTypeNumber, () => Number.POSITIVE_INFINITY, FlowGraphInfBlock.ClassName, config);\r\n    }\r\n\r\n    public static ClassName = \"FGInfBlock\";\r\n}\r\nRegisterClass(FlowGraphInfBlock.ClassName, FlowGraphInfBlock);\r\n\r\nexport class FlowGraphNaNBlock extends FlowGraphConstantOperationBlock<number> {\r\n    constructor(config?: IFlowGraphBlockConfiguration) {\r\n        super(RichTypeNumber, () => Number.NaN, FlowGraphNaNBlock.ClassName, config);\r\n    }\r\n\r\n    public static ClassName = \"FGNaNBlock\";\r\n}\r\nRegisterClass(FlowGraphNaNBlock.ClassName, FlowGraphNaNBlock);\r\n\r\nfunction _componentWiseUnaryOperation(a: any, op: (a: any) => any) {\r\n    const aClassName = _getClassNameOf(a);\r\n    switch (aClassName) {\r\n        case \"Vector2\":\r\n            return new Vector2(op(a.x), op(a.y));\r\n        case \"Vector3\":\r\n            return new Vector3(op(a.x), op(a.y), op(a.z));\r\n        case \"Vector4\":\r\n            return new Vector4(op(a.x), op(a.y), op(a.z), op(a.w));\r\n        default:\r\n            return op(a);\r\n    }\r\n}\r\n\r\nexport class FlowGraphAbsBlock extends FlowGraphUnaryOperationBlock<any, any> {\r\n    constructor(config?: IFlowGraphBlockConfiguration) {\r\n        super(RichTypeAny, RichTypeAny, (a) => this._polymorphicAbs(a), FlowGraphAbsBlock.ClassName, config);\r\n    }\r\n\r\n    private _polymorphicAbs(a: any) {\r\n        return _componentWiseUnaryOperation(a, Math.abs);\r\n    }\r\n\r\n    public static ClassName = \"FGAbsBlock\";\r\n}\r\nRegisterClass(FlowGraphAbsBlock.ClassName, FlowGraphAbsBlock);\r\n\r\nexport class FlowGraphSignBlock extends FlowGraphUnaryOperationBlock<any, any> {\r\n    constructor(config?: IFlowGraphBlockConfiguration) {\r\n        super(RichTypeAny, RichTypeAny, (a) => this._polymorphicSign(a), FlowGraphSignBlock.ClassName, config);\r\n    }\r\n\r\n    private _polymorphicSign(a: any) {\r\n        return _componentWiseUnaryOperation(a, Math.sign);\r\n    }\r\n\r\n    public static ClassName = \"FGSignBlock\";\r\n}\r\nRegisterClass(FlowGraphSignBlock.ClassName, FlowGraphSignBlock);\r\n\r\nexport class FlowGraphTruncBlock extends FlowGraphUnaryOperationBlock<any, any> {\r\n    constructor(config?: IFlowGraphBlockConfiguration) {\r\n        super(RichTypeAny, RichTypeAny, (a) => this._polymorphicTrunc(a), FlowGraphTruncBlock.ClassName, config);\r\n    }\r\n\r\n    private _polymorphicTrunc(a: any) {\r\n        return _componentWiseUnaryOperation(a, Math.trunc);\r\n    }\r\n\r\n    public static ClassName = \"FGTruncBlock\";\r\n}\r\nRegisterClass(FlowGraphTruncBlock.ClassName, FlowGraphTruncBlock);\r\n\r\nexport class FlowGraphFloorBlock extends FlowGraphUnaryOperationBlock<any, any> {\r\n    constructor(config?: IFlowGraphBlockConfiguration) {\r\n        super(RichTypeAny, RichTypeAny, (a) => this._polymorphicFloor(a), FlowGraphFloorBlock.ClassName, config);\r\n    }\r\n\r\n    private _polymorphicFloor(a: any) {\r\n        return _componentWiseUnaryOperation(a, Math.floor);\r\n    }\r\n\r\n    public static ClassName = \"FGFloorBlock\";\r\n}\r\nRegisterClass(FlowGraphFloorBlock.ClassName, FlowGraphFloorBlock);\r\n\r\nexport class FlowGraphCeilBlock extends FlowGraphUnaryOperationBlock<any, any> {\r\n    constructor(config?: IFlowGraphBlockConfiguration) {\r\n        super(RichTypeAny, RichTypeAny, (a) => this._polymorphicCeiling(a), FlowGraphCeilBlock.ClassName, config);\r\n    }\r\n\r\n    private _polymorphicCeiling(a: any) {\r\n        return _componentWiseUnaryOperation(a, Math.ceil);\r\n    }\r\n\r\n    public static ClassName = \"FGCeilBlock\";\r\n}\r\nRegisterClass(FlowGraphCeilBlock.ClassName, FlowGraphCeilBlock);\r\n\r\nexport class FlowGraphFractBlock extends FlowGraphUnaryOperationBlock<any, any> {\r\n    constructor(config?: IFlowGraphBlockConfiguration) {\r\n        super(RichTypeAny, RichTypeAny, (a) => this._polymorphicFract(a), FlowGraphFractBlock.ClassName, config);\r\n    }\r\n\r\n    private _polymorphicFract(a: any) {\r\n        return _componentWiseUnaryOperation(a, (a) => a - Math.floor(a));\r\n    }\r\n\r\n    public static ClassName = \"FGFractBlock\";\r\n}\r\nRegisterClass(FlowGraphFractBlock.ClassName, FlowGraphFractBlock);\r\n\r\nexport class FlowGraphNegBlock extends FlowGraphUnaryOperationBlock<any, any> {\r\n    constructor(config?: IFlowGraphBlockConfiguration) {\r\n        super(RichTypeAny, RichTypeAny, (a) => this._polymorphicNeg(a), FlowGraphNegBlock.ClassName, config);\r\n    }\r\n\r\n    private _polymorphicNeg(a: any) {\r\n        return _componentWiseUnaryOperation(a, (a) => -a);\r\n    }\r\n\r\n    public static ClassName = \"FGNegBlock\";\r\n}\r\nRegisterClass(FlowGraphNegBlock.ClassName, FlowGraphNegBlock);\r\n\r\nfunction _componentWiseBinaryOperation(a: any, b: any, op: (a: any, b: any) => any) {\r\n    const aClassName = _getClassNameOf(a);\r\n    switch (aClassName) {\r\n        case \"Vector2\":\r\n            return new Vector2(op(a.x, b.x), op(a.y, b.y));\r\n        case \"Vector3\":\r\n            return new Vector3(op(a.x, b.x), op(a.y, b.y), op(a.z, b.z));\r\n        case \"Vector4\":\r\n            return new Vector4(op(a.x, b.x), op(a.y, b.y), op(a.z, b.z), op(a.w, b.w));\r\n        default:\r\n            return op(a, b);\r\n    }\r\n}\r\n\r\nexport class FlowGraphRemainderBlock extends FlowGraphBinaryOperationBlock<any, any, any> {\r\n    constructor(config?: IFlowGraphBlockConfiguration) {\r\n        super(RichTypeAny, RichTypeAny, RichTypeAny, (a, b) => this._polymorphicRemainder(a, b), FlowGraphRemainderBlock.ClassName, config);\r\n    }\r\n\r\n    private _polymorphicRemainder(a: any, b: any) {\r\n        return _componentWiseBinaryOperation(a, b, (a, b) => a % b);\r\n    }\r\n\r\n    public static ClassName = \"FGRemainderBlock\";\r\n}\r\nRegisterClass(FlowGraphRemainderBlock.ClassName, FlowGraphRemainderBlock);\r\n\r\nexport class FlowGraphMinBlock extends FlowGraphBinaryOperationBlock<any, any, any> {\r\n    constructor(config?: IFlowGraphBlockConfiguration) {\r\n        super(RichTypeAny, RichTypeAny, RichTypeAny, (a, b) => this._polymorphicMin(a, b), FlowGraphMinBlock.ClassName, config);\r\n    }\r\n\r\n    private _polymorphicMin(a: any, b: any) {\r\n        return _componentWiseBinaryOperation(a, b, Math.min);\r\n    }\r\n\r\n    public static ClassName = \"FGMinBlock\";\r\n}\r\nRegisterClass(FlowGraphMinBlock.ClassName, FlowGraphMinBlock);\r\n\r\nexport class FlowGraphMaxBlock extends FlowGraphBinaryOperationBlock<any, any, any> {\r\n    constructor(config?: IFlowGraphBlockConfiguration) {\r\n        super(RichTypeAny, RichTypeAny, RichTypeAny, (a, b) => this._polymorphicMax(a, b), FlowGraphMaxBlock.ClassName, config);\r\n    }\r\n\r\n    private _polymorphicMax(a: any, b: any) {\r\n        return _componentWiseBinaryOperation(a, b, Math.max);\r\n    }\r\n\r\n    public static ClassName = \"FGMaxBlock\";\r\n}\r\nRegisterClass(FlowGraphMaxBlock.ClassName, FlowGraphMaxBlock);\r\n\r\nfunction _clamp(a: number, b: number, c: number) {\r\n    return Math.min(Math.max(a, b), c);\r\n}\r\n\r\nfunction _componentWiseTernaryOperation(a: any, b: any, c: any, op: (a: any, b: any, c: any) => any) {\r\n    const aClassName = _getClassNameOf(a);\r\n    switch (aClassName) {\r\n        case \"Vector2\":\r\n            return new Vector2(op(a.x, b.x, c.x), op(a.y, b.y, c.y));\r\n        case \"Vector3\":\r\n            return new Vector3(op(a.x, b.x, c.x), op(a.y, b.y, c.y), op(a.z, b.z, c.z));\r\n        case \"Vector4\":\r\n            return new Vector4(op(a.x, b.x, c.x), op(a.y, b.y, c.y), op(a.z, b.z, c.z), op(a.w, b.w, c.w));\r\n        default:\r\n            return op(a, b, c);\r\n    }\r\n}\r\n\r\nexport class FlowGraphClampBlock extends FlowGraphTernaryOperationBlock<any, any, any, any> {\r\n    constructor(config?: IFlowGraphBlockConfiguration) {\r\n        super(RichTypeAny, RichTypeAny, RichTypeAny, RichTypeAny, (a, b, c) => this._polymorphicClamp(a, b, c), FlowGraphClampBlock.ClassName, config);\r\n    }\r\n\r\n    private _polymorphicClamp(a: any, b: any, c: any) {\r\n        return _componentWiseTernaryOperation(a, b, c, _clamp);\r\n    }\r\n\r\n    public static ClassName = \"FGClampBlock\";\r\n}\r\nRegisterClass(FlowGraphClampBlock.ClassName, FlowGraphClampBlock);\r\n\r\nexport class FlowGraphSaturateBlock extends FlowGraphUnaryOperationBlock<any, any> {\r\n    constructor(config?: IFlowGraphBlockConfiguration) {\r\n        super(RichTypeAny, RichTypeAny, (a) => this._polymorphicSaturate(a), FlowGraphSaturateBlock.ClassName, config);\r\n    }\r\n\r\n    private _polymorphicSaturate(a: any) {\r\n        return _componentWiseUnaryOperation(a, (a) => _clamp(a, 0, 1));\r\n    }\r\n\r\n    public static ClassName = \"FGSaturateBlock\";\r\n}\r\nRegisterClass(FlowGraphSaturateBlock.ClassName, FlowGraphSaturateBlock);\r\n\r\nexport class FlowGraphInterpolateBlock extends FlowGraphTernaryOperationBlock<any, any, any, any> {\r\n    constructor(config?: IFlowGraphBlockConfiguration) {\r\n        super(RichTypeAny, RichTypeAny, RichTypeAny, RichTypeAny, (a, b, c) => this._polymorphicInterpolate(a, b, c), FlowGraphInterpolateBlock.ClassName, config);\r\n    }\r\n\r\n    private _interpolate(a: number, b: number, c: number) {\r\n        return (1 - c) * a + c * b;\r\n    }\r\n\r\n    private _polymorphicInterpolate(a: any, b: any, c: any) {\r\n        return _componentWiseTernaryOperation(a, b, c, this._interpolate);\r\n    }\r\n\r\n    public static ClassName = \"FGInterpolateBlock\";\r\n}\r\nRegisterClass(FlowGraphInterpolateBlock.ClassName, FlowGraphInterpolateBlock);\r\n\r\nexport class FlowGraphEqBlock extends FlowGraphBinaryOperationBlock<any, any, boolean> {\r\n    constructor(config?: IFlowGraphBlockConfiguration) {\r\n        super(RichTypeAny, RichTypeAny, RichTypeBoolean, (a, b) => this._polymorphicEq(a, b), FlowGraphEqBlock.ClassName, config);\r\n    }\r\n\r\n    private _polymorphicEq(a: any, b: any) {\r\n        const aClassName = _getClassNameOf(a);\r\n        const bClassName = _getClassNameOf(b);\r\n        if (_areSameVectorClass(aClassName, bClassName)) {\r\n            return a.equals(b);\r\n        } else {\r\n            return a === b;\r\n        }\r\n    }\r\n\r\n    public static ClassName = \"FGEqBlock\";\r\n}\r\nRegisterClass(FlowGraphEqBlock.ClassName, FlowGraphEqBlock);\r\n\r\nexport class FlowGraphLessThanBlock extends FlowGraphBinaryOperationBlock<any, any, boolean> {\r\n    constructor(config?: IFlowGraphBlockConfiguration) {\r\n        super(RichTypeAny, RichTypeAny, RichTypeBoolean, (a, b) => this._polymorphicLessThan(a, b), FlowGraphLessThanBlock.ClassName, config);\r\n    }\r\n\r\n    private _polymorphicLessThan(a: any, b: any) {\r\n        const aClassName = _getClassNameOf(a);\r\n        switch (aClassName) {\r\n            case \"Vector2\":\r\n                return a.x < b.x && a.y < b.y;\r\n            case \"Vector3\":\r\n                return a.x < b.x && a.y < b.y && a.z < b.z;\r\n            case \"Vector4\":\r\n                return a.x < b.x && a.y < b.y && a.z < b.z && a.w < b.w;\r\n            default:\r\n                return a < b;\r\n        }\r\n    }\r\n\r\n    public static ClassName = \"FGLessThanBlock\";\r\n}\r\nRegisterClass(FlowGraphLessThanBlock.ClassName, FlowGraphLessThanBlock);\r\n\r\nexport class FlowGraphLessThanOrEqualBlock extends FlowGraphBinaryOperationBlock<any, any, boolean> {\r\n    constructor(config?: IFlowGraphBlockConfiguration) {\r\n        super(RichTypeAny, RichTypeAny, RichTypeBoolean, (a, b) => this._polymorphicLessThanOrEqual(a, b), FlowGraphLessThanOrEqualBlock.ClassName, config);\r\n    }\r\n\r\n    private _polymorphicLessThanOrEqual(a: any, b: any) {\r\n        const aClassName = _getClassNameOf(a);\r\n        switch (aClassName) {\r\n            case \"Vector2\":\r\n                return a.x <= b.x && a.y <= b.y;\r\n            case \"Vector3\":\r\n                return a.x <= b.x && a.y <= b.y && a.z <= b.z;\r\n            case \"Vector4\":\r\n                return a.x <= b.x && a.y <= b.y && a.z <= b.z && a.w <= b.w;\r\n            default:\r\n                return a <= b;\r\n        }\r\n    }\r\n\r\n    public static ClassName = \"FGLessThanOrEqualBlock\";\r\n}\r\n\r\nexport class FlowGraphGreaterThanBlock extends FlowGraphBinaryOperationBlock<any, any, boolean> {\r\n    constructor(config?: IFlowGraphBlockConfiguration) {\r\n        super(RichTypeAny, RichTypeAny, RichTypeBoolean, (a, b) => this._polymorphicGreaterThan(a, b), FlowGraphGreaterThanBlock.ClassName, config);\r\n    }\r\n\r\n    private _polymorphicGreaterThan(a: any, b: any) {\r\n        const aClassName = _getClassNameOf(a);\r\n        switch (aClassName) {\r\n            case \"Vector2\":\r\n                return a.x > b.x && a.y > b.y;\r\n            case \"Vector3\":\r\n                return a.x > b.x && a.y > b.y && a.z > b.z;\r\n            case \"Vector4\":\r\n                return a.x > b.x && a.y > b.y && a.z > b.z && a.w > b.w;\r\n            default:\r\n                return a > b;\r\n        }\r\n    }\r\n\r\n    public static ClassName = \"FGGreaterThanBlock\";\r\n}\r\nRegisterClass(FlowGraphGreaterThanBlock.ClassName, FlowGraphGreaterThanBlock);\r\n\r\nexport class FlowGraphGreaterThanOrEqualBlock extends FlowGraphBinaryOperationBlock<any, any, boolean> {\r\n    constructor(config?: IFlowGraphBlockConfiguration) {\r\n        super(RichTypeAny, RichTypeAny, RichTypeBoolean, (a, b) => this._polymorphicGreaterThanOrEqual(a, b), FlowGraphGreaterThanOrEqualBlock.ClassName, config);\r\n    }\r\n\r\n    private _polymorphicGreaterThanOrEqual(a: any, b: any) {\r\n        const aClassName = _getClassNameOf(a);\r\n        switch (aClassName) {\r\n            case \"Vector2\":\r\n                return a.x >= b.x && a.y >= b.y;\r\n            case \"Vector3\":\r\n                return a.x >= b.x && a.y >= b.y && a.z >= b.z;\r\n            case \"Vector4\":\r\n                return a.x >= b.x && a.y >= b.y && a.z >= b.z && a.w >= b.w;\r\n            default:\r\n                return a >= b;\r\n        }\r\n    }\r\n\r\n    public static ClassName = \"FGGreaterThanOrEqualBlock\";\r\n}\r\nRegisterClass(FlowGraphGreaterThanOrEqualBlock.ClassName, FlowGraphGreaterThanOrEqualBlock);\r\n\r\nexport class FlowGraphIsNanBlock extends FlowGraphUnaryOperationBlock<any, boolean> {\r\n    constructor(config?: IFlowGraphBlockConfiguration) {\r\n        super(RichTypeAny, RichTypeBoolean, (a) => this._polymorphicIsNan(a), FlowGraphIsNanBlock.ClassName, config);\r\n    }\r\n\r\n    private _polymorphicIsNan(a: any) {\r\n        const aClassName = _getClassNameOf(a);\r\n        switch (aClassName) {\r\n            case \"Vector2\":\r\n                return isNaN(a.x) || isNaN(a.y);\r\n            case \"Vector3\":\r\n                return isNaN(a.x) || isNaN(a.y) || isNaN(a.z);\r\n            case \"Vector4\":\r\n                return isNaN(a.x) || isNaN(a.y) || isNaN(a.z) || isNaN(a.w);\r\n            default:\r\n                return isNaN(a);\r\n        }\r\n    }\r\n\r\n    public static ClassName = \"FGIsNanBlock\";\r\n}\r\nRegisterClass(FlowGraphIsNanBlock.ClassName, FlowGraphIsNanBlock);\r\n\r\nexport class FlowGraphIsInfBlock extends FlowGraphUnaryOperationBlock<any, boolean> {\r\n    constructor(config?: IFlowGraphBlockConfiguration) {\r\n        super(RichTypeAny, RichTypeBoolean, (a) => this._polymorphicIsInf(a), FlowGraphIsInfBlock.ClassName, config);\r\n    }\r\n\r\n    private _polymorphicIsInf(a: any) {\r\n        const aClassName = _getClassNameOf(a);\r\n        switch (aClassName) {\r\n            case \"Vector2\":\r\n                return !isFinite(a.x) || !isFinite(a.y);\r\n            case \"Vector3\":\r\n                return !isFinite(a.x) || !isFinite(a.y) || !isFinite(a.z);\r\n            case \"Vector4\":\r\n                return !isFinite(a.x) || !isFinite(a.y) || !isFinite(a.z) || !isFinite(a.w);\r\n            default:\r\n                return !isFinite(a);\r\n        }\r\n    }\r\n\r\n    public static ClassName = \"FGIsInfBlock\";\r\n}\r\n\r\nexport class FlowGraphDegToRadBlock extends FlowGraphUnaryOperationBlock<any, any> {\r\n    constructor(config?: IFlowGraphBlockConfiguration) {\r\n        super(RichTypeAny, RichTypeAny, (a) => this._polymorphicDegToRad(a), FlowGraphDegToRadBlock.ClassName, config);\r\n    }\r\n\r\n    private _degToRad(a: number) {\r\n        return (a * Math.PI) / 180;\r\n    }\r\n\r\n    private _polymorphicDegToRad(a: any) {\r\n        return _componentWiseUnaryOperation(a, this._degToRad);\r\n    }\r\n\r\n    public static ClassName = \"FGDegToRadBlock\";\r\n}\r\nRegisterClass(FlowGraphDegToRadBlock.ClassName, FlowGraphDegToRadBlock);\r\n\r\nexport class FlowGraphRadToDegBlock extends FlowGraphUnaryOperationBlock<any, any> {\r\n    constructor(config?: IFlowGraphBlockConfiguration) {\r\n        super(RichTypeAny, RichTypeAny, (a) => this._polymorphicRadToDeg(a), FlowGraphRadToDegBlock.ClassName, config);\r\n    }\r\n\r\n    private _radToDeg(a: number) {\r\n        return (a * 180) / Math.PI;\r\n    }\r\n\r\n    private _polymorphicRadToDeg(a: any) {\r\n        return _componentWiseUnaryOperation(a, this._radToDeg);\r\n    }\r\n\r\n    public static ClassName = \"FGRadToDegBlock\";\r\n}\r\nRegisterClass(FlowGraphRadToDegBlock.ClassName, FlowGraphRadToDegBlock);\r\n\r\nexport class FlowGraphSinBlock extends FlowGraphUnaryOperationBlock<any, any> {\r\n    constructor(config?: IFlowGraphBlockConfiguration) {\r\n        super(RichTypeAny, RichTypeAny, (a) => this._polymorphicSin(a), FlowGraphSinBlock.ClassName, config);\r\n    }\r\n\r\n    private _polymorphicSin(a: any) {\r\n        return _componentWiseUnaryOperation(a, Math.sin);\r\n    }\r\n\r\n    public static ClassName = \"FGSinBlock\";\r\n}\r\nRegisterClass(FlowGraphSinBlock.ClassName, FlowGraphSinBlock);\r\n\r\nexport class FlowGraphCosBlock extends FlowGraphUnaryOperationBlock<any, any> {\r\n    constructor(config?: IFlowGraphBlockConfiguration) {\r\n        super(RichTypeAny, RichTypeAny, (a) => this._polymorphicCos(a), FlowGraphCosBlock.ClassName, config);\r\n    }\r\n\r\n    private _polymorphicCos(a: any) {\r\n        return _componentWiseUnaryOperation(a, Math.cos);\r\n    }\r\n\r\n    public static ClassName = \"FGCosBlock\";\r\n}\r\nRegisterClass(FlowGraphCosBlock.ClassName, FlowGraphCosBlock);\r\n\r\nexport class FlowGraphTanBlock extends FlowGraphUnaryOperationBlock<any, any> {\r\n    constructor(config?: IFlowGraphBlockConfiguration) {\r\n        super(RichTypeAny, RichTypeAny, (a) => this._polymorphicTan(a), FlowGraphTanBlock.ClassName, config);\r\n    }\r\n\r\n    private _polymorphicTan(a: any) {\r\n        return _componentWiseUnaryOperation(a, Math.tan);\r\n    }\r\n\r\n    public static ClassName = \"FGTanBlock\";\r\n}\r\nRegisterClass(FlowGraphTanBlock.ClassName, FlowGraphTanBlock);\r\n\r\nexport class FlowGraphAsinBlock extends FlowGraphUnaryOperationBlock<any, any> {\r\n    constructor(config?: IFlowGraphBlockConfiguration) {\r\n        super(RichTypeAny, RichTypeAny, (a) => this._polymorphicAsin(a), FlowGraphAsinBlock.ClassName, config);\r\n    }\r\n\r\n    private _polymorphicAsin(a: any) {\r\n        return _componentWiseUnaryOperation(a, Math.asin);\r\n    }\r\n\r\n    public static ClassName = \"FGAsinBlock\";\r\n}\r\nRegisterClass(FlowGraphAsinBlock.ClassName, FlowGraphAsinBlock);\r\n\r\nexport class FlowGraphAcosBlock extends FlowGraphUnaryOperationBlock<any, any> {\r\n    constructor(config?: IFlowGraphBlockConfiguration) {\r\n        super(RichTypeAny, RichTypeAny, (a) => this._polymorphicAcos(a), FlowGraphAcosBlock.ClassName, config);\r\n    }\r\n\r\n    private _polymorphicAcos(a: any) {\r\n        return _componentWiseUnaryOperation(a, Math.acos);\r\n    }\r\n\r\n    public static ClassName = \"FGAcosBlock\";\r\n}\r\nRegisterClass(FlowGraphAcosBlock.ClassName, FlowGraphAcosBlock);\r\n\r\nexport class FlowGraphAtanBlock extends FlowGraphUnaryOperationBlock<any, any> {\r\n    constructor(config?: IFlowGraphBlockConfiguration) {\r\n        super(RichTypeAny, RichTypeAny, (a) => this._polymorphicAtan(a), FlowGraphAtanBlock.ClassName, config);\r\n    }\r\n\r\n    private _polymorphicAtan(a: any) {\r\n        return _componentWiseUnaryOperation(a, Math.atan);\r\n    }\r\n\r\n    public static ClassName = \"FGAtanBlock\";\r\n}\r\nRegisterClass(FlowGraphAtanBlock.ClassName, FlowGraphAtanBlock);\r\n\r\nexport class FlowGraphAtan2Block extends FlowGraphBinaryOperationBlock<any, any, any> {\r\n    constructor(config?: IFlowGraphBlockConfiguration) {\r\n        super(RichTypeAny, RichTypeAny, RichTypeAny, (a, b) => this._polymorphicAtan2(a, b), FlowGraphAtan2Block.ClassName, config);\r\n    }\r\n\r\n    private _polymorphicAtan2(a: any, b: any) {\r\n        return _componentWiseBinaryOperation(a, b, Math.atan2);\r\n    }\r\n\r\n    public static ClassName = \"FGAtan2Block\";\r\n}\r\nRegisterClass(FlowGraphAtan2Block.ClassName, FlowGraphAtan2Block);\r\n\r\nexport class FlowGraphSinhBlock extends FlowGraphUnaryOperationBlock<any, any> {\r\n    constructor(config?: IFlowGraphBlockConfiguration) {\r\n        super(RichTypeAny, RichTypeAny, (a) => this._polymorphicSinh(a), FlowGraphSinhBlock.ClassName, config);\r\n    }\r\n\r\n    private _polymorphicSinh(a: any) {\r\n        return _componentWiseUnaryOperation(a, Math.sinh);\r\n    }\r\n\r\n    public static ClassName = \"FGSinhBlock\";\r\n}\r\nRegisterClass(FlowGraphSinhBlock.ClassName, FlowGraphSinhBlock);\r\n\r\nexport class FlowGraphCoshBlock extends FlowGraphUnaryOperationBlock<any, any> {\r\n    constructor(config?: IFlowGraphBlockConfiguration) {\r\n        super(RichTypeAny, RichTypeAny, (a) => this._polymorphicCosh(a), FlowGraphCoshBlock.ClassName, config);\r\n    }\r\n\r\n    private _polymorphicCosh(a: any) {\r\n        return _componentWiseUnaryOperation(a, Math.cosh);\r\n    }\r\n\r\n    public static ClassName = \"FGCoshBlock\";\r\n}\r\nRegisterClass(FlowGraphCoshBlock.ClassName, FlowGraphCoshBlock);\r\n\r\nexport class FlowGraphTanhBlock extends FlowGraphUnaryOperationBlock<any, any> {\r\n    constructor(config?: IFlowGraphBlockConfiguration) {\r\n        super(RichTypeAny, RichTypeAny, (a) => this._polymorphicTanh(a), FlowGraphTanhBlock.ClassName, config);\r\n    }\r\n\r\n    private _polymorphicTanh(a: any) {\r\n        return _componentWiseUnaryOperation(a, Math.tanh);\r\n    }\r\n\r\n    public static ClassName = \"FGTanhBlock\";\r\n}\r\nRegisterClass(FlowGraphTanhBlock.ClassName, FlowGraphTanhBlock);\r\n\r\nexport class FlowGraphAsinhBlock extends FlowGraphUnaryOperationBlock<any, any> {\r\n    constructor(config?: IFlowGraphBlockConfiguration) {\r\n        super(RichTypeAny, RichTypeNumber, (a) => this._polymorphicAsinh(a), FlowGraphAsinhBlock.ClassName, config);\r\n    }\r\n\r\n    private _polymorphicAsinh(a: any) {\r\n        return _componentWiseUnaryOperation(a, Math.asinh);\r\n    }\r\n\r\n    public static ClassName = \"FGAsinhBlock\";\r\n}\r\nRegisterClass(FlowGraphAsinhBlock.ClassName, FlowGraphAsinhBlock);\r\n\r\nexport class FlowGraphAcoshBlock extends FlowGraphUnaryOperationBlock<any, any> {\r\n    constructor(config?: IFlowGraphBlockConfiguration) {\r\n        super(RichTypeAny, RichTypeNumber, (a) => this._polymorphicAcosh(a), FlowGraphAcoshBlock.ClassName, config);\r\n    }\r\n\r\n    private _polymorphicAcosh(a: any) {\r\n        return _componentWiseUnaryOperation(a, Math.acosh);\r\n    }\r\n\r\n    public static ClassName = \"FGAcoshBlock\";\r\n}\r\nRegisterClass(FlowGraphAcoshBlock.ClassName, FlowGraphAcoshBlock);\r\n\r\nexport class FlowGraphAtanhBlock extends FlowGraphUnaryOperationBlock<any, any> {\r\n    constructor(config?: IFlowGraphBlockConfiguration) {\r\n        super(RichTypeAny, RichTypeNumber, (a) => this._polymorphicAtanh(a), FlowGraphAtanhBlock.ClassName, config);\r\n    }\r\n\r\n    private _polymorphicAtanh(a: any) {\r\n        return _componentWiseUnaryOperation(a, Math.atanh);\r\n    }\r\n\r\n    public static ClassName = \"FGAtanhBlock\";\r\n}\r\nRegisterClass(FlowGraphAtanhBlock.ClassName, FlowGraphAtanhBlock);\r\n\r\nexport class FlowGraphExpBlock extends FlowGraphUnaryOperationBlock<any, any> {\r\n    constructor(config?: IFlowGraphBlockConfiguration) {\r\n        super(RichTypeAny, RichTypeNumber, (a) => this._polymorphicExp(a), FlowGraphExpBlock.ClassName, config);\r\n    }\r\n\r\n    private _polymorphicExp(a: any) {\r\n        return _componentWiseUnaryOperation(a, Math.exp);\r\n    }\r\n\r\n    public static ClassName = \"FGExpBlock\";\r\n}\r\nRegisterClass(FlowGraphExpBlock.ClassName, FlowGraphExpBlock);\r\n\r\nexport class FlowGraphLogBlock extends FlowGraphUnaryOperationBlock<any, any> {\r\n    constructor(config?: IFlowGraphBlockConfiguration) {\r\n        super(RichTypeAny, RichTypeNumber, (a) => this._polymorphicLog(a), FlowGraphLogBlock.ClassName, config);\r\n    }\r\n\r\n    private _polymorphicLog(a: any) {\r\n        return _componentWiseUnaryOperation(a, Math.log);\r\n    }\r\n\r\n    public static ClassName = \"FGLogBlock\";\r\n}\r\nRegisterClass(FlowGraphLogBlock.ClassName, FlowGraphLogBlock);\r\n\r\nexport class FlowGraphLog2Block extends FlowGraphUnaryOperationBlock<any, any> {\r\n    constructor(config?: IFlowGraphBlockConfiguration) {\r\n        super(RichTypeAny, RichTypeNumber, (a) => this._polymorphicLog2(a), FlowGraphLog2Block.ClassName, config);\r\n    }\r\n\r\n    private _polymorphicLog2(a: any) {\r\n        return _componentWiseUnaryOperation(a, Math.log2);\r\n    }\r\n\r\n    public static ClassName = \"FGLog2Block\";\r\n}\r\nRegisterClass(FlowGraphLog2Block.ClassName, FlowGraphLog2Block);\r\n\r\nexport class FlowGraphLog10Block extends FlowGraphUnaryOperationBlock<any, any> {\r\n    constructor(config?: IFlowGraphBlockConfiguration) {\r\n        super(RichTypeAny, RichTypeNumber, (a) => this._polymorphicLog10(a), FlowGraphLog10Block.ClassName, config);\r\n    }\r\n\r\n    private _polymorphicLog10(a: any) {\r\n        return _componentWiseUnaryOperation(a, Math.log10);\r\n    }\r\n\r\n    public static ClassName = \"FGLog10Block\";\r\n}\r\nRegisterClass(FlowGraphLog10Block.ClassName, FlowGraphLog10Block);\r\n\r\nexport class FlowGraphSqrtBlock extends FlowGraphUnaryOperationBlock<any, any> {\r\n    constructor(config?: IFlowGraphBlockConfiguration) {\r\n        super(RichTypeAny, RichTypeNumber, (a) => this._polymorphicSqrt(a), FlowGraphSqrtBlock.ClassName, config);\r\n    }\r\n\r\n    private _polymorphicSqrt(a: any) {\r\n        return _componentWiseUnaryOperation(a, Math.sqrt);\r\n    }\r\n\r\n    public static ClassName = \"FGSqrtBlock\";\r\n}\r\nRegisterClass(FlowGraphSqrtBlock.ClassName, FlowGraphSqrtBlock);\r\n\r\nexport class FlowGraphCubeRootBlock extends FlowGraphUnaryOperationBlock<any, any> {\r\n    constructor(config?: IFlowGraphBlockConfiguration) {\r\n        super(RichTypeAny, RichTypeNumber, (a) => this._polymorphicCubeRoot(a), FlowGraphCubeRootBlock.ClassName, config);\r\n    }\r\n\r\n    private _polymorphicCubeRoot(a: any) {\r\n        return _componentWiseUnaryOperation(a, Math.cbrt);\r\n    }\r\n\r\n    public static ClassName = \"FGCubeRootBlock\";\r\n}\r\nRegisterClass(FlowGraphCubeRootBlock.ClassName, FlowGraphCubeRootBlock);\r\n\r\nexport class FlowGraphPowBlock extends FlowGraphBinaryOperationBlock<any, any, any> {\r\n    constructor(config?: IFlowGraphBlockConfiguration) {\r\n        super(RichTypeAny, RichTypeNumber, RichTypeNumber, (a, b) => this._polymorphicPow(a, b), FlowGraphPowBlock.ClassName, config);\r\n    }\r\n\r\n    private _polymorphicPow(a: any, b: any) {\r\n        return _componentWiseBinaryOperation(a, b, Math.pow);\r\n    }\r\n\r\n    public static ClassName = \"FGPowBlock\";\r\n}\r\nRegisterClass(FlowGraphPowBlock.ClassName, FlowGraphPowBlock);\r\n\r\nexport class FlowGraphLengthBlock extends FlowGraphUnaryOperationBlock<any, number> {\r\n    constructor(config?: IFlowGraphBlockConfiguration) {\r\n        super(RichTypeAny, RichTypeNumber, (a) => this._polymorphicLength(a), FlowGraphLengthBlock.ClassName, config);\r\n    }\r\n\r\n    private _polymorphicLength(a: any) {\r\n        const aClassName = _getClassNameOf(a);\r\n        switch (aClassName) {\r\n            case \"Vector2\":\r\n            case \"Vector3\":\r\n            case \"Vector4\":\r\n                return a.length();\r\n            default:\r\n                throw new Error(`Cannot compute length of value ${a}`);\r\n        }\r\n    }\r\n\r\n    public static ClassName = \"FGLengthBlock\";\r\n}\r\nRegisterClass(FlowGraphLengthBlock.ClassName, FlowGraphLengthBlock);\r\n\r\nexport class FlowGraphNormalizeBlock extends FlowGraphUnaryOperationBlock<any, any> {\r\n    constructor(config?: IFlowGraphBlockConfiguration) {\r\n        super(RichTypeAny, RichTypeAny, (a) => this._polymorphicNormalize(a), FlowGraphNormalizeBlock.ClassName, config);\r\n    }\r\n\r\n    private _polymorphicNormalize(a: any) {\r\n        const aClassName = _getClassNameOf(a);\r\n        switch (aClassName) {\r\n            case \"Vector2\":\r\n            case \"Vector3\":\r\n            case \"Vector4\":\r\n                return a.normalize();\r\n            default:\r\n                throw new Error(`Cannot normalize value ${a}`);\r\n        }\r\n    }\r\n\r\n    public static ClassName = \"FGNormalizeBlock\";\r\n}\r\nRegisterClass(FlowGraphNormalizeBlock.ClassName, FlowGraphNormalizeBlock);\r\n\r\nexport class FlowGraphCrossBlock extends FlowGraphBinaryOperationBlock<Vector3, Vector3, Vector3> {\r\n    constructor(config?: IFlowGraphBlockConfiguration) {\r\n        super(RichTypeVector3, RichTypeVector3, RichTypeVector3, (a, b) => Vector3.Cross(a, b), FlowGraphCrossBlock.ClassName, config);\r\n    }\r\n\r\n    public static ClassName = \"FGCrossBlock\";\r\n}\r\nRegisterClass(FlowGraphCrossBlock.ClassName, FlowGraphCrossBlock);\r\n\r\nexport class FlowGraphRotate2DBlock extends FlowGraphBinaryOperationBlock<Vector2, number, Vector2> {\r\n    constructor(config?: IFlowGraphBlockConfiguration) {\r\n        super(RichTypeVector2, RichTypeNumber, RichTypeVector2, (a, b) => Vector2.Transform(a, Matrix.RotationZ(b)), FlowGraphRotate2DBlock.ClassName, config);\r\n    }\r\n\r\n    public static ClassName = \"FGRotate2DBlock\";\r\n}\r\nRegisterClass(FlowGraphRotate2DBlock.ClassName, FlowGraphRotate2DBlock);\r\n\r\nexport class FlowGraphRotate3DBlock extends FlowGraphTernaryOperationBlock<Vector3, Vector3, number, Vector3> {\r\n    constructor(config?: IFlowGraphBlockConfiguration) {\r\n        super(\r\n            RichTypeVector3,\r\n            RichTypeVector3,\r\n            RichTypeNumber,\r\n            RichTypeVector3,\r\n            (a, b, c) => Vector3.TransformCoordinates(a, Matrix.RotationAxis(b, c)),\r\n            FlowGraphRotate3DBlock.ClassName,\r\n            config\r\n        );\r\n    }\r\n\r\n    public static ClassName = \"FGRotate3DBlock\";\r\n}\r\nRegisterClass(FlowGraphRotate3DBlock.ClassName, FlowGraphRotate3DBlock);\r\n"]}