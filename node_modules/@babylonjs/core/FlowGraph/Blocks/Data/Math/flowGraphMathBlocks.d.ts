import type { IFlowGraphBlockConfiguration } from "../../../flowGraphBlock";
import { FlowGraphBinaryOperationBlock } from "../flowGraphBinaryOperationBlock";
import { FlowGraphConstantOperationBlock } from "../flowGraphConstantOperationBlock";
import { Vector2, Vector3 } from "../../../../Maths/math.vector";
import { FlowGraphUnaryOperationBlock } from "../flowGraphUnaryOperationBlock";
import { FlowGraphTernaryOperationBlock } from "../flowGraphTernaryOperationBlock";
/**
 * @experimental
 * Polymorphic add block.
 */
export declare class FlowGraphAddBlock extends FlowGraphBinaryOperationBlock<any, any, any> {
    constructor(config?: IFlowGraphBlockConfiguration);
    private _polymorphicAdd;
    getClassName(): string;
    static ClassName: string;
}
/**
 * @experimental
 * Polymorphic add block.
 */
export declare class FlowGraphSubtractBlock extends FlowGraphBinaryOperationBlock<any, any, any> {
    constructor(config?: IFlowGraphBlockConfiguration);
    private _polymorphicAdd;
    getClassName(): string;
    static ClassName: string;
}
export declare class FlowGraphMultiplyBlock extends FlowGraphBinaryOperationBlock<any, any, any> {
    constructor(config?: IFlowGraphBlockConfiguration);
    private _polymorphicMultiply;
    static ClassName: string;
}
export declare class FlowGraphDivideBlock extends FlowGraphBinaryOperationBlock<any, any, any> {
    constructor(config?: IFlowGraphBlockConfiguration);
    private _polymorphicDivide;
    static ClassName: string;
}
export declare class FlowGraphRandomBlock extends FlowGraphConstantOperationBlock<number> {
    constructor(config?: IFlowGraphBlockConfiguration);
    static ClassName: string;
}
export declare class FlowGraphDotBlock extends FlowGraphBinaryOperationBlock<any, any, number> {
    constructor(config?: IFlowGraphBlockConfiguration);
    private _polymorphicDot;
    static ClassName: string;
}
export declare class FlowGraphEBlock extends FlowGraphConstantOperationBlock<number> {
    constructor(config?: IFlowGraphBlockConfiguration);
    static ClassName: string;
}
export declare class FlowGraphPiBlock extends FlowGraphConstantOperationBlock<number> {
    constructor(config?: IFlowGraphBlockConfiguration);
    static ClassName: string;
}
export declare class FlowGraphInfBlock extends FlowGraphConstantOperationBlock<number> {
    constructor(config?: IFlowGraphBlockConfiguration);
    static ClassName: string;
}
export declare class FlowGraphNaNBlock extends FlowGraphConstantOperationBlock<number> {
    constructor(config?: IFlowGraphBlockConfiguration);
    static ClassName: string;
}
export declare class FlowGraphAbsBlock extends FlowGraphUnaryOperationBlock<any, any> {
    constructor(config?: IFlowGraphBlockConfiguration);
    private _polymorphicAbs;
    static ClassName: string;
}
export declare class FlowGraphSignBlock extends FlowGraphUnaryOperationBlock<any, any> {
    constructor(config?: IFlowGraphBlockConfiguration);
    private _polymorphicSign;
    static ClassName: string;
}
export declare class FlowGraphTruncBlock extends FlowGraphUnaryOperationBlock<any, any> {
    constructor(config?: IFlowGraphBlockConfiguration);
    private _polymorphicTrunc;
    static ClassName: string;
}
export declare class FlowGraphFloorBlock extends FlowGraphUnaryOperationBlock<any, any> {
    constructor(config?: IFlowGraphBlockConfiguration);
    private _polymorphicFloor;
    static ClassName: string;
}
export declare class FlowGraphCeilBlock extends FlowGraphUnaryOperationBlock<any, any> {
    constructor(config?: IFlowGraphBlockConfiguration);
    private _polymorphicCeiling;
    static ClassName: string;
}
export declare class FlowGraphFractBlock extends FlowGraphUnaryOperationBlock<any, any> {
    constructor(config?: IFlowGraphBlockConfiguration);
    private _polymorphicFract;
    static ClassName: string;
}
export declare class FlowGraphNegBlock extends FlowGraphUnaryOperationBlock<any, any> {
    constructor(config?: IFlowGraphBlockConfiguration);
    private _polymorphicNeg;
    static ClassName: string;
}
export declare class FlowGraphRemainderBlock extends FlowGraphBinaryOperationBlock<any, any, any> {
    constructor(config?: IFlowGraphBlockConfiguration);
    private _polymorphicRemainder;
    static ClassName: string;
}
export declare class FlowGraphMinBlock extends FlowGraphBinaryOperationBlock<any, any, any> {
    constructor(config?: IFlowGraphBlockConfiguration);
    private _polymorphicMin;
    static ClassName: string;
}
export declare class FlowGraphMaxBlock extends FlowGraphBinaryOperationBlock<any, any, any> {
    constructor(config?: IFlowGraphBlockConfiguration);
    private _polymorphicMax;
    static ClassName: string;
}
export declare class FlowGraphClampBlock extends FlowGraphTernaryOperationBlock<any, any, any, any> {
    constructor(config?: IFlowGraphBlockConfiguration);
    private _polymorphicClamp;
    static ClassName: string;
}
export declare class FlowGraphSaturateBlock extends FlowGraphUnaryOperationBlock<any, any> {
    constructor(config?: IFlowGraphBlockConfiguration);
    private _polymorphicSaturate;
    static ClassName: string;
}
export declare class FlowGraphInterpolateBlock extends FlowGraphTernaryOperationBlock<any, any, any, any> {
    constructor(config?: IFlowGraphBlockConfiguration);
    private _interpolate;
    private _polymorphicInterpolate;
    static ClassName: string;
}
export declare class FlowGraphEqBlock extends FlowGraphBinaryOperationBlock<any, any, boolean> {
    constructor(config?: IFlowGraphBlockConfiguration);
    private _polymorphicEq;
    static ClassName: string;
}
export declare class FlowGraphLessThanBlock extends FlowGraphBinaryOperationBlock<any, any, boolean> {
    constructor(config?: IFlowGraphBlockConfiguration);
    private _polymorphicLessThan;
    static ClassName: string;
}
export declare class FlowGraphLessThanOrEqualBlock extends FlowGraphBinaryOperationBlock<any, any, boolean> {
    constructor(config?: IFlowGraphBlockConfiguration);
    private _polymorphicLessThanOrEqual;
    static ClassName: string;
}
export declare class FlowGraphGreaterThanBlock extends FlowGraphBinaryOperationBlock<any, any, boolean> {
    constructor(config?: IFlowGraphBlockConfiguration);
    private _polymorphicGreaterThan;
    static ClassName: string;
}
export declare class FlowGraphGreaterThanOrEqualBlock extends FlowGraphBinaryOperationBlock<any, any, boolean> {
    constructor(config?: IFlowGraphBlockConfiguration);
    private _polymorphicGreaterThanOrEqual;
    static ClassName: string;
}
export declare class FlowGraphIsNanBlock extends FlowGraphUnaryOperationBlock<any, boolean> {
    constructor(config?: IFlowGraphBlockConfiguration);
    private _polymorphicIsNan;
    static ClassName: string;
}
export declare class FlowGraphIsInfBlock extends FlowGraphUnaryOperationBlock<any, boolean> {
    constructor(config?: IFlowGraphBlockConfiguration);
    private _polymorphicIsInf;
    static ClassName: string;
}
export declare class FlowGraphDegToRadBlock extends FlowGraphUnaryOperationBlock<any, any> {
    constructor(config?: IFlowGraphBlockConfiguration);
    private _degToRad;
    private _polymorphicDegToRad;
    static ClassName: string;
}
export declare class FlowGraphRadToDegBlock extends FlowGraphUnaryOperationBlock<any, any> {
    constructor(config?: IFlowGraphBlockConfiguration);
    private _radToDeg;
    private _polymorphicRadToDeg;
    static ClassName: string;
}
export declare class FlowGraphSinBlock extends FlowGraphUnaryOperationBlock<any, any> {
    constructor(config?: IFlowGraphBlockConfiguration);
    private _polymorphicSin;
    static ClassName: string;
}
export declare class FlowGraphCosBlock extends FlowGraphUnaryOperationBlock<any, any> {
    constructor(config?: IFlowGraphBlockConfiguration);
    private _polymorphicCos;
    static ClassName: string;
}
export declare class FlowGraphTanBlock extends FlowGraphUnaryOperationBlock<any, any> {
    constructor(config?: IFlowGraphBlockConfiguration);
    private _polymorphicTan;
    static ClassName: string;
}
export declare class FlowGraphAsinBlock extends FlowGraphUnaryOperationBlock<any, any> {
    constructor(config?: IFlowGraphBlockConfiguration);
    private _polymorphicAsin;
    static ClassName: string;
}
export declare class FlowGraphAcosBlock extends FlowGraphUnaryOperationBlock<any, any> {
    constructor(config?: IFlowGraphBlockConfiguration);
    private _polymorphicAcos;
    static ClassName: string;
}
export declare class FlowGraphAtanBlock extends FlowGraphUnaryOperationBlock<any, any> {
    constructor(config?: IFlowGraphBlockConfiguration);
    private _polymorphicAtan;
    static ClassName: string;
}
export declare class FlowGraphAtan2Block extends FlowGraphBinaryOperationBlock<any, any, any> {
    constructor(config?: IFlowGraphBlockConfiguration);
    private _polymorphicAtan2;
    static ClassName: string;
}
export declare class FlowGraphSinhBlock extends FlowGraphUnaryOperationBlock<any, any> {
    constructor(config?: IFlowGraphBlockConfiguration);
    private _polymorphicSinh;
    static ClassName: string;
}
export declare class FlowGraphCoshBlock extends FlowGraphUnaryOperationBlock<any, any> {
    constructor(config?: IFlowGraphBlockConfiguration);
    private _polymorphicCosh;
    static ClassName: string;
}
export declare class FlowGraphTanhBlock extends FlowGraphUnaryOperationBlock<any, any> {
    constructor(config?: IFlowGraphBlockConfiguration);
    private _polymorphicTanh;
    static ClassName: string;
}
export declare class FlowGraphAsinhBlock extends FlowGraphUnaryOperationBlock<any, any> {
    constructor(config?: IFlowGraphBlockConfiguration);
    private _polymorphicAsinh;
    static ClassName: string;
}
export declare class FlowGraphAcoshBlock extends FlowGraphUnaryOperationBlock<any, any> {
    constructor(config?: IFlowGraphBlockConfiguration);
    private _polymorphicAcosh;
    static ClassName: string;
}
export declare class FlowGraphAtanhBlock extends FlowGraphUnaryOperationBlock<any, any> {
    constructor(config?: IFlowGraphBlockConfiguration);
    private _polymorphicAtanh;
    static ClassName: string;
}
export declare class FlowGraphExpBlock extends FlowGraphUnaryOperationBlock<any, any> {
    constructor(config?: IFlowGraphBlockConfiguration);
    private _polymorphicExp;
    static ClassName: string;
}
export declare class FlowGraphLogBlock extends FlowGraphUnaryOperationBlock<any, any> {
    constructor(config?: IFlowGraphBlockConfiguration);
    private _polymorphicLog;
    static ClassName: string;
}
export declare class FlowGraphLog2Block extends FlowGraphUnaryOperationBlock<any, any> {
    constructor(config?: IFlowGraphBlockConfiguration);
    private _polymorphicLog2;
    static ClassName: string;
}
export declare class FlowGraphLog10Block extends FlowGraphUnaryOperationBlock<any, any> {
    constructor(config?: IFlowGraphBlockConfiguration);
    private _polymorphicLog10;
    static ClassName: string;
}
export declare class FlowGraphSqrtBlock extends FlowGraphUnaryOperationBlock<any, any> {
    constructor(config?: IFlowGraphBlockConfiguration);
    private _polymorphicSqrt;
    static ClassName: string;
}
export declare class FlowGraphCubeRootBlock extends FlowGraphUnaryOperationBlock<any, any> {
    constructor(config?: IFlowGraphBlockConfiguration);
    private _polymorphicCubeRoot;
    static ClassName: string;
}
export declare class FlowGraphPowBlock extends FlowGraphBinaryOperationBlock<any, any, any> {
    constructor(config?: IFlowGraphBlockConfiguration);
    private _polymorphicPow;
    static ClassName: string;
}
export declare class FlowGraphLengthBlock extends FlowGraphUnaryOperationBlock<any, number> {
    constructor(config?: IFlowGraphBlockConfiguration);
    private _polymorphicLength;
    static ClassName: string;
}
export declare class FlowGraphNormalizeBlock extends FlowGraphUnaryOperationBlock<any, any> {
    constructor(config?: IFlowGraphBlockConfiguration);
    private _polymorphicNormalize;
    static ClassName: string;
}
export declare class FlowGraphCrossBlock extends FlowGraphBinaryOperationBlock<Vector3, Vector3, Vector3> {
    constructor(config?: IFlowGraphBlockConfiguration);
    static ClassName: string;
}
export declare class FlowGraphRotate2DBlock extends FlowGraphBinaryOperationBlock<Vector2, number, Vector2> {
    constructor(config?: IFlowGraphBlockConfiguration);
    static ClassName: string;
}
export declare class FlowGraphRotate3DBlock extends FlowGraphTernaryOperationBlock<Vector3, Vector3, number, Vector3> {
    constructor(config?: IFlowGraphBlockConfiguration);
    static ClassName: string;
}
